/*
 * GLUT Shapes Demo
 *
 * Written by Nigel Stewart November 2003
 *
 * This program is test harness for the sphere, cone
 * and torus shapes in GLUT.
 *
 * Spinning wireframe and smooth shaded shapes are
 * displayed until the ESC or q key is pressed.  The
 * number of geometry stacks and slices can be adjusted
 * using the + and - keys.
 */





#include<windows.h>
#include<GL/glut.h>
void Draw()
{
glClear(GL_COLOR_BUFFER_BIT);

glColor3ub(0,36,125);
glBegin(GL_QUADS);
glVertex2d(50.0,25.0);
glVertex2d(50.0,-25.0);
glVertex2d(-50.0,-25.0);
glVertex2d(-50.0,25.0);
glEnd();
glFlush();
//cross angle

glColor3ub(255,255,255);
glBegin(GL_POLYGON);
glVertex2f(40,25);

glVertex2f(-50,-18);
glVertex2f(-50,-25);
glVertex2f(-40,-25);
glVertex2f(50,18);
glVertex2f(50,25);
glVertex2f(40,25);
glEnd();
glFlush();


//cross angle 2

glColor3ub(255,255,255);
glBegin(GL_POLYGON);

glVertex2f(-40,25);
glVertex2f(50,-18);
glVertex2f(50,-25);
glVertex2f(40,-25);
glVertex2f(-50,18);
glVertex2f(-50,25);
glEnd();
glFlush();


//red cross angle 1st quadrant
glColor3ub(207,20,43);
glBegin(GL_POLYGON);
glVertex2f(43,25);
glVertex2f(-9,0);
glVertex2f(-1,0);
glVertex2f(50,25);


glEnd();
glFlush();


//red cross angle 3st quadrant
glColor3ub(207,20,43);
glBegin(GL_POLYGON);
glVertex2f(-50,-25);
glVertex2f(-43,-25);
glVertex2f(9,0);
glVertex2f(1,0);


glEnd();
glFlush();


//red cross angle 4th quadrant
glColor3ub(207,20,43);
glBegin(GL_POLYGON);
glVertex2f(-50,25);
glVertex2f(0,0);
glVertex2f(-6.5,0);
glVertex2f(-50,21);


glEnd();
glFlush();


//red cross angle second quadrant
glColor3ub(207,20,43);
glBegin(GL_POLYGON);
glVertex2f(50,-20.5);
glVertex2f(7,0);
glVertex2f(-0.5,0);
glVertex2f(50,-25);


glEnd();
glFlush();



//white line
glColor3ub(255,255,255);
glBegin(GL_QUADS);
glVertex2f(-50,7);

glVertex2f(50,7);
glVertex2f(50,-7);
glVertex2f(-50,-7);
glEnd();
glFlush();

//horizontal white line
glColor3ub(255,255,255);
glBegin(GL_QUADS);
glVertex2f(-7,25);
glVertex2f(-7,-25);
glVertex2f(7,-25);
glVertex2f(7,25);
glEnd();
glFlush();
//red horizontal step

glColor3ub(207,20,43);
glBegin(GL_QUADS);
glVertex2f(-4.5,25);
glVertex2f(-4.5,-25);
glVertex2f(4.5,-25);
glVertex2f(4.5,25);
glEnd();
glFlush();


//red VERTICLE 2 step

glColor3ub(207,20,43);
glBegin(GL_QUADS);
glVertex2f(-50,4.5);
glVertex2f(50,4.6);
glVertex2f(50,-4.5);
glVertex2f(-50,-4.5);
glEnd();
glFlush();








}

void Initialize()
{
//glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(-50.0, 50.0, -25.0, 25.0);
}
int main(int Argc, char** Argv)
{
glutInit(&Argc, Argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize(1200,600);
glutInitWindowPosition(300,300);
glutCreateWindow("Flag of EGLAND");
Initialize();
glutDisplayFunc(Draw);
glutMainLoop();
return 0;
}
