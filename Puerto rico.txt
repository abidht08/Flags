/*
 * GLUT Shapes Demo
 *
 * Written by Nigel Stewart November 2003
 *
 * This program is test harness for the sphere, cone
 * and torus shapes in GLUT.
 *
 * Spinning wireframe and smooth shaded shapes are
 * displayed until the ESC or q key is pressed.  The
 * number of geometry stacks and slices can be adjusted
 * using the + and - keys.
 */





#include<windows.h>
#include<GL/glut.h>
void Draw()
{
glClear(GL_COLOR_BUFFER_BIT);
//white background
glColor3f(1,1,1);
glBegin(GL_QUADS);
glVertex2d(50.0,25.0);
glVertex2d(50.0,-25.0);
glVertex2d(-50.0,-25.0);
glVertex2d(-50.0,25.0);
glEnd();
glFlush();



//blue1
glColor3ub(255,0,0);
glBegin(GL_QUADS);
glVertex2f(50,25);
glVertex2f(50,15);
glVertex2f(-50,15);
glVertex2f(-50,25);
glEnd();
glFlush();
//blue2
glColor3ub(255,0,0);
glBegin(GL_QUADS);
glVertex2f(50,5);
glVertex2f(50,-5);
glVertex2f(-50,-5);
glVertex2f(-50,5);
glEnd();
glFlush();
//blue3
glColor3ub(255,0,0);
glBegin(GL_QUADS);
glVertex2f(50,-15);
glVertex2f(50,-25);
glVertex2f(-50,-25);
glVertex2f(-50,-15);
glEnd();
glFlush();

//triangle
glColor3ub(0,0,255);

glBegin(GL_TRIANGLES);
glVertex2f(-50,25);
glVertex2f(-6,0);

//glVertex2f(-6,0);
glVertex2f(-50,-25);

//glVertex2f(-50,-25);
glVertex2f(-50,25);
glEnd();
glFlush();


//star
glColor3ub(255,255,255);

glBegin(GL_POLYGON);
//1
glVertex2f(-35,5.5);
glVertex2i(-39,-6);
glVertex2i(-35,-3);
glVertex2i(-31,-6);
glVertex2i(-35,5.5);
glEnd();
glFlush();

glColor3ub(255,255,255);

glBegin(GL_TRIANGLES);
//1
glVertex2f(-41,0.8f);
glVertex2f(-29,0.8f);
glVertex2i(-35,-3);

glEnd();
glFlush();


}

void Initialize()
{
//glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(-50.0, 50.0, -25.0, 25.0);
}
int main(int Argc, char** Argv)
{
glutInit(&Argc, Argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize(1200,600);
glutInitWindowPosition(300,300);
glutCreateWindow("Flag of PUERTO RICO");
Initialize();
glutDisplayFunc(Draw);
glutMainLoop();
return 0;
}
