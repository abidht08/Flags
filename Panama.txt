/*
 * GLUT Shapes Demo
 *
 * Written by Nigel Stewart November 2003
 *
 * This program is test harness for the sphere, cone
 * and torus shapes in GLUT.
 *
 * Spinning wireframe and smooth shaded shapes are
 * displayed until the ESC or q key is pressed.  The
 * number of geometry stacks and slices can be adjusted
 * using the + and - keys.
 */





#include<windows.h>
#include<GL/glut.h>
void Draw()
{
glClear(GL_COLOR_BUFFER_BIT);

glColor3ub(255,255,255);
glBegin(GL_QUADS);
glVertex2d(50.0,25.0);
glVertex2d(50.0,-25);
glVertex2d(-50.0,-25);
glVertex2d(-50.0,25.0);
glEnd();
glFlush();



//red
glColor3ub(219,43,30);
glBegin(GL_QUADS);
glVertex2f(0,0);
glVertex2f(0,25);
glVertex2f(50,25);
glVertex2f(50,0);
glEnd();
glFlush();




//blue quads

glColor3ub(0,57,166);
glBegin(GL_QUADS);
glVertex2f(-50,0);
glVertex2f(0,0);
glVertex2f(0,-25);
glVertex2f(-50,-25);
glEnd();
glFlush();


//star Drawing
glColor3ub(0,57,166);

glBegin(GL_POLYGON);
//1
glVertex2f(-25,19);
glVertex2f(-29.5,4.56);
glVertex2f(-25,8);
glVertex2f(-20.5,4.56);
glVertex2f(-25,15);
glEnd();
glFlush();
glColor3ub(0,57,166);
glBegin(GL_TRIANGLES);
//1
glVertex2f(-32.5,13);
glVertex2f(-17.5,13);
glVertex2f(-25,8);
glEnd();
glFlush();



//star Drawing 2
glColor3ub(219,43,30);

glBegin(GL_POLYGON);
//1
glVertex2f(25,-4.56);
glVertex2f(20.5,-19);
glVertex2f(25,-15);
glVertex2f(29.5,-19);
glVertex2f(25,-4.56);



glEnd();
glFlush();
glColor3ub(219,43,30);
glBegin(GL_TRIANGLES);
//1
glVertex2f(17.5,-10);
glVertex2f(32.5,-10);
glVertex2f(25,-15);



glEnd();
glFlush();




}

void Initialize()
{
//glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(-50.0, 50.0, -25.0, 25.0);
}
int main(int Argc, char** Argv)
{
glutInit(&Argc, Argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize(1200,600);
glutInitWindowPosition(300,300);
glutCreateWindow("Flag of PANAMA");
Initialize();
glutDisplayFunc(Draw);
glutMainLoop();
return 0;
}
