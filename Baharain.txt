/*
 * GLUT Shapes Demo
 *
 * Written by Nigel Stewart November 2003
 *
 * This program is test harness for the sphere, cone
 * and torus shapes in GLUT.
 *
 * Spinning wireframe and smooth shaded shapes are
 * displayed until the ESC or q key is pressed.  The
 * number of geometry stacks and slices can be adjusted
 * using the + and - keys.
 */





#include<windows.h>
#include<GL/glut.h>
void Draw()
{
glClear(GL_COLOR_BUFFER_BIT);
//white background
glColor3ub(206,17,38);
glBegin(GL_QUADS);
glVertex2d(50.0,25.0);
glVertex2d(50.0,-25.0);
glVertex2d(-50.0,-25.0);
glVertex2d(-50.0,25.0);
glEnd();
glFlush();



//white
glColor3ub(255,255,255);
glBegin(GL_QUADS);
glVertex2f(-50,25);
glVertex2f(-20,25);
glVertex2f(-20,-25);
glVertex2f(-50,-25);
glEnd();
glFlush();


//angle
glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,25);
glVertex2f(-20,18.75);
glVertex2f(-8,21.875);

glEnd();
glFlush();

//angle 2
glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,18.75);
glVertex2f(-20,12.5);
glVertex2f(-8,15.625);

glEnd();
glFlush();



//angle 3
glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,12.5);
glVertex2f(-20,6.25);
glVertex2f(-8,9.375);

glEnd();
glFlush();

//angle 4
glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,6.25);
glVertex2f(-20,0);
glVertex2f(-8,3.125);

glEnd();
glFlush();


//angle 5
glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,0);
glVertex2f(-20,-6.25);
glVertex2f(-8,-3.125);

glEnd();
glFlush();


//angle 6
glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,-6.25);
glVertex2f(-20,-12.5);
glVertex2f(-8,-9.375);

glEnd();
glFlush();


//angle 7
glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,-12.5);
glVertex2f(-20,-18.75);

glVertex2f(-8,-15.625);

glEnd();
glFlush();
//angle 8

glColor3ub(255,255,255);
glBegin(GL_TRIANGLES);
glVertex2f(-20,-18.75);
glVertex2f(-20,-25);
glVertex2f(-8,-21.875);

glEnd();
glFlush();
//blue2


//star



}

void Initialize()
{
//glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(-50.0, 50.0, -25.0, 25.0);
}
int main(int Argc, char** Argv)
{
glutInit(&Argc, Argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize(1200,600);
glutInitWindowPosition(300,300);
glutCreateWindow("Flag of Baharain");
Initialize();
glutDisplayFunc(Draw);
glutMainLoop();
return 0;
}
